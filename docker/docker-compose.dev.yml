version: '3.8'

services:
  # Frontend Service (Development)
  frontend-dev:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api/v1
      - NODE_ENV=development
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - inventory-network-dev
    restart: unless-stopped

  # Backend Service (Development)
  backend-dev:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://inventory_user:inventory_pass@db-dev:5432/inventory_management
      - JWT_SECRET=dev-jwt-secret-key
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
    depends_on:
      - db-dev
    networks:
      - inventory-network-dev
    restart: unless-stopped
    volumes:
      - ../backend:/app
      - /app/node_modules
      - ../backend/uploads:/app/uploads

  # Database Service (Development)
  db-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=inventory_management
      - POSTGRES_USER=inventory_user
      - POSTGRES_PASSWORD=inventory_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ../database/migrations:/docker-entrypoint-initdb.d
    networks:
      - inventory-network-dev
    restart: unless-stopped

  # pgAdmin (Development)
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@inventory.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - db-dev
    networks:
      - inventory-network-dev
    restart: unless-stopped

volumes:
  postgres_data_dev:

networks:
  inventory-network-dev:
    driver: bridge 